{"name": "test_student_registration_form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=100.0.4896.60)\nStacktrace:\n#0 0x5558f2500013 <unknown>\n#1 0x5558f226289f <unknown>\n#2 0x5558f224e388 <unknown>\n#3 0x5558f224cd52 <unknown>\n#4 0x5558f224cf32 <unknown>\n#5 0x5558f22644ca <unknown>\n#6 0x5558f22ca2ef <unknown>\n#7 0x5558f22b6932 <unknown>\n#8 0x5558f22c9b94 <unknown>\n#9 0x5558f22b6823 <unknown>\n#10 0x5558f228c08a <unknown>\n#11 0x5558f228d1e5 <unknown>\n#12 0x5558f252de5d <unknown>\n#13 0x5558f2547061 <unknown>\n#14 0x5558f252fbb5 <unknown>\n#15 0x5558f2547e08 <unknown>\n#16 0x5558f25232f0 <unknown>\n#17 0x5558f2563988 <unknown>\n#18 0x5558f2563b08 <unknown>\n#19 0x5558f257d5dd <unknown>\n#20 0x7fb97523d609 <unknown>", "trace": "def test_student_registration_form():\n        elvira = User(first_name='Elvira',\n                      last_name='Askerova',\n                      email='elviraskerova@gmail.com',\n                      phone='1234567891',\n                      address='Plehanova Street 1',\n                      gender='Female',\n                      birthday_year='1990',\n                      birthday_month='December',\n                      birthday_day='08',\n                      subject='Commerce',\n                      hobby='Reading',\n                      image='photo.jpg',\n                      state='Uttar Pradesh',\n                      city='Agra'\n                      )\n    \n        allure.dynamic.tag('web')\n        allure.dynamic.severity(Severity.NORMAL)\n        allure.dynamic.label('owner', 'elviraskerova')\n        allure.dynamic.feature('Проверка отправки формы')\n    \n        practice_form = Form(elvira)\n    \n        with allure.step('Заполняем данные формы'):\n>           practice_form.submit_form(elvira)\n\ntests\\test_form.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ndemoqa_3_8\\model\\pages\\practice_form.py:71: in submit_form\n    self.given_opened()\ndemoqa_3_8\\model\\pages\\practice_form.py:19: in given_opened\n    browser.open('/automation-practice-form')\nvenv\\Lib\\site-packages\\selene\\support\\shared\\browser.py:83: in open\n    self.config.get_or_create_driver().get(url)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in get\n    self.execute(Command.GET, {'url': url})\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C4097BE350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...\\\\n#18 0x5558f2563b08 \\\\u003Cunknown>\\\\n#19 0x5558f257d5dd \\\\u003Cunknown>\\\\n#20 0x7fb97523d609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=100.0.4896.60)\nE       Stacktrace:\nE       #0 0x5558f2500013 <unknown>\nE       #1 0x5558f226289f <unknown>\nE       #2 0x5558f224e388 <unknown>\nE       #3 0x5558f224cd52 <unknown>\nE       #4 0x5558f224cf32 <unknown>\nE       #5 0x5558f22644ca <unknown>\nE       #6 0x5558f22ca2ef <unknown>\nE       #7 0x5558f22b6932 <unknown>\nE       #8 0x5558f22c9b94 <unknown>\nE       #9 0x5558f22b6823 <unknown>\nE       #10 0x5558f228c08a <unknown>\nE       #11 0x5558f228d1e5 <unknown>\nE       #12 0x5558f252de5d <unknown>\nE       #13 0x5558f2547061 <unknown>\nE       #14 0x5558f252fbb5 <unknown>\nE       #15 0x5558f2547e08 <unknown>\nE       #16 0x5558f25232f0 <unknown>\nE       #17 0x5558f2563988 <unknown>\nE       #18 0x5558f2563b08 <unknown>\nE       #19 0x5558f257d5dd <unknown>\nE       #20 0x7fb97523d609 <unknown>\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: InvalidArgumentException"}, "steps": [{"name": "Заполняем данные формы", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=100.0.4896.60)\nStacktrace:\n#0 0x5558f2500013 <unknown>\n#1 0x5558f226289f <unknown>\n#2 0x5558f224e388 <unknown>\n#3 0x5558f224cd52 <unknown>\n#4 0x5558f224cf32 <unknown>\n#5 0x5558f22644ca <unknown>\n#6 0x5558f22ca2ef <unknown>\n#7 0x5558f22b6932 <unknown>\n#8 0x5558f22c9b94 <unknown>\n#9 0x5558f22b6823 <unknown>\n#10 0x5558f228c08a <unknown>\n#11 0x5558f228d1e5 <unknown>\n#12 0x5558f252de5d <unknown>\n#13 0x5558f2547061 <unknown>\n#14 0x5558f252fbb5 <unknown>\n#15 0x5558f2547e08 <unknown>\n#16 0x5558f25232f0 <unknown>\n#17 0x5558f2563988 <unknown>\n#18 0x5558f2563b08 <unknown>\n#19 0x5558f257d5dd <unknown>\n#20 0x7fb97523d609 <unknown>\n\n", "trace": "  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\tests\\test_form.py\", line 33, in test_student_registration_form\n    practice_form.submit_form(elvira)\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\demoqa_3_8\\model\\pages\\practice_form.py\", line 71, in submit_form\n    self.given_opened()\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\demoqa_3_8\\model\\pages\\practice_form.py\", line 19, in given_opened\n    browser.open('/automation-practice-form')\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\venv\\Lib\\site-packages\\selene\\support\\shared\\browser.py\", line 83, in open\n    self.config.get_or_create_driver().get(url)\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in get\n    self.execute(Command.GET, {'url': url})\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 428, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Elvira\\PycharmProjects\\qa_quru\\pythonProject\\demoqa_3_8\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1677959743474, "stop": 1677959743866}], "start": 1677959743473, "stop": 1677959743869, "uuid": "3e5ab813-94ab-4068-b5f9-a73c153a800a", "historyId": "14d288af82e1affea22383996e3b1145", "testCaseId": "adaf6343a5ff888a0412e971ed919764", "fullName": "tests.test_form#test_student_registration_form", "labels": [{"name": "tag", "value": "web"}, {"name": "severity", "value": "normal"}, {"name": "owner", "value": "elviraskerova"}, {"name": "feature", "value": "Проверка отправки формы"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_form"}, {"name": "host", "value": "DESKTOP-CAMU49J"}, {"name": "thread", "value": "6996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_form"}]}